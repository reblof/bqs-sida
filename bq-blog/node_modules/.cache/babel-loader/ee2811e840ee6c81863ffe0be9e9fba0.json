{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccalofgren/gittest/bq-blog/src/Parser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Parser = () => {\n  _s();\n\n  const [parsedCsvData, setParsedCsvData] = useState([]); //const parseFile = file => {\n\n  useEffect(() => {\n    Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vRUvD-Cab6I3vItJ3w1MNEiMM3L8wuJwre1hjE1WxNGERsi84ZdEkK1ZWcXaPaKPcrK2viV-aOSlAcg/pub?output=csv', {\n      header: true,\n      download: true,\n      complete: results => {\n        setParsedCsvData(results.data);\n      }\n    });\n  }, []); //};\n\n  console.log(parsedCsvData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [parsedCsvData && parsedCsvData.map((parsedData, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n      id: \"art-1\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"{parsedData.L\\xE4nk}\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: parsedData.Titel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: parsedData.Beskrivning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"button\",\n          children: \"L\\xE4s inl\\xE4gget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Kanji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: parsedCsvData && parsedCsvData.map((parsedData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: parsedData.Beskrivning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: parsedData.Titel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Parser, \"98A1Xa0fzJw+YvDE4cWC8lPG9E0=\");\n\n_c = Parser;\nexport default Parser;\n\nvar _c;\n\n$RefreshReg$(_c, \"Parser\");","map":{"version":3,"names":["React","useEffect","useState","Papa","Parser","parsedCsvData","setParsedCsvData","parse","header","download","complete","results","data","console","log","map","parsedData","index","Titel","Beskrivning"],"sources":["/Users/rebeccalofgren/gittest/bq-blog/src/Parser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\n\nconst Parser =()=> {\n    const [parsedCsvData, setParsedCsvData] = useState([]);\n    //const parseFile = file => {\n    useEffect(() => {\n        Papa.parse('https://docs.google.com/spreadsheets/d/e/2PACX-1vRUvD-Cab6I3vItJ3w1MNEiMM3L8wuJwre1hjE1WxNGERsi84ZdEkK1ZWcXaPaKPcrK2viV-aOSlAcg/pub?output=csv', {\n            header: true,\n            download: true,\n            complete: results => {\n              setParsedCsvData(results.data)\n              \n            },\n          });\n    },[])\n      \n    //};\n    console.log(parsedCsvData)\n    return(\n        <>\n        {parsedCsvData &&\n            parsedCsvData.map((parsedData, index) => (\n            <article id=\"art-1\">\n                <a href=\"{parsedData.Länk}\">\n                    <h2>{parsedData.Titel}</h2>\n                    <p>{parsedData.Beskrivning}</p>\n                    <span class=\"button\">Läs inlägget</span>\n                </a>\n            </article>\n        ))}\n        \n        <table>\n        <thead>\n            <tr>\n            <th>Kanji</th>\n            <th>Reading</th>\n            <th>English</th>\n            </tr>\n        </thead>\n        <tbody>\n        {parsedCsvData &&\n            parsedCsvData.map((parsedData, index) => (\n            <tr key={index}>\n                <td>{parsedData.Beskrivning}</td>\n                <td>{parsedData.Titel}</td>\n            </tr>\n            ))}\n        </tbody>\n        </table>\n        </>\n    )\n  }\n  export default Parser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;;AAEA,MAAMC,MAAM,GAAE,MAAK;EAAA;;EACf,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD,CADe,CAEf;;EACAD,SAAS,CAAC,MAAM;IACZE,IAAI,CAACI,KAAL,CAAW,gJAAX,EAA6J;MACzJC,MAAM,EAAE,IADiJ;MAEzJC,QAAQ,EAAE,IAF+I;MAGzJC,QAAQ,EAAEC,OAAO,IAAI;QACnBL,gBAAgB,CAACK,OAAO,CAACC,IAAT,CAAhB;MAED;IANwJ,CAA7J;EAQH,CATQ,EASP,EATO,CAAT,CAHe,CAcf;;EACAC,OAAO,CAACC,GAAR,CAAYT,aAAZ;EACA,oBACI;IAAA,WACCA,aAAa,IACVA,aAAa,CAACU,GAAd,CAAkB,CAACC,UAAD,EAAaC,KAAb,kBAClB;MAAS,EAAE,EAAC,OAAZ;MAAA,uBACI;QAAG,IAAI,EAAC,sBAAR;QAAA,wBACI;UAAA,UAAKD,UAAU,CAACE;QAAhB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAIF,UAAU,CAACG;QAAf;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAM,KAAK,EAAC,QAAZ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADA,CAFJ,eAYA;MAAA,wBACA;QAAA,uBACI;UAAA,wBACA;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADA,eAEA;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFA,eAGA;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADA,eAQA;QAAA,UACCd,aAAa,IACVA,aAAa,CAACU,GAAd,CAAkB,CAACC,UAAD,EAAaC,KAAb,kBAClB;UAAA,wBACI;YAAA,UAAKD,UAAU,CAACG;UAAhB;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,UAAKH,UAAU,CAACE;UAAhB;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA,GAASD,KAAT;UAAA;UAAA;UAAA;QAAA,QADA;MAFJ;QAAA;QAAA;QAAA;MAAA,QARA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZA;EAAA,gBADJ;AAiCD,CAjDH;;GAAMb,M;;KAAAA,M;AAkDJ,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}